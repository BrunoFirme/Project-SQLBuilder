//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 20/12/2019 12:39:48
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SQLBuilderModel", "insert_table_project_id_fk", "Project", RelationshipMultiplicity.One, typeof(SQLBuilderModel.Project), "InsertTables", RelationshipMultiplicity.Many, typeof(SQLBuilderModel.InsertTable), true)]
[assembly: EdmRelationshipAttribute("SQLBuilderModel", "selectfield_insert_table_fk", "InsertTable", RelationshipMultiplicity.One, typeof(SQLBuilderModel.InsertTable), "SelectFields", RelationshipMultiplicity.Many, typeof(SQLBuilderModel.SelectField), true)]
[assembly: EdmRelationshipAttribute("SQLBuilderModel", "custom_field_insert_table_fk", "InsertTable", RelationshipMultiplicity.One, typeof(SQLBuilderModel.InsertTable), "CustomFields", RelationshipMultiplicity.Many, typeof(SQLBuilderModel.CustomField), true)]

#endregion

namespace SQLBuilderModel
{

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities() : 
                base(@"metadata=DataBaseModel.csdl|DataBaseModel.ssdl|DataBaseModel.msl;provider=Devart.Data.PostgreSql;provider connection string=""User Id=postgres;Password=postgres;Host=localhost;Database=SQLBuilder;Persist Security Info=True;Initial Schema=sqlbuilder""", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities(string connectionString) : 
                base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsertTable> InsertTables
        {
            get
            {
                if ((_InsertTables == null))
                {
                    _InsertTables = base.CreateObjectSet<InsertTable>("InsertTables");
                }
                return _InsertTables;
            }
        }
        private ObjectSet<InsertTable> _InsertTables;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SelectField> SelectFields
        {
            get
            {
                if ((_SelectFields == null))
                {
                    _SelectFields = base.CreateObjectSet<SelectField>("SelectFields");
                }
                return _SelectFields;
            }
        }
        private ObjectSet<SelectField> _SelectFields;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomField> CustomFields
        {
            get
            {
                if ((_CustomFields == null))
                {
                    _CustomFields = base.CreateObjectSet<CustomField>("CustomFields");
                }
                return _CustomFields;
            }
        }
        private ObjectSet<CustomField> _CustomFields;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the InsertTables EntitySet.
        /// </summary>
        public void AddToInsertTables(InsertTable insertTable)
        {
            base.AddObject("InsertTables", insertTable);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SelectFields EntitySet.
        /// </summary>
        public void AddToSelectFields(SelectField selectField)
        {
            base.AddObject("SelectFields", selectField);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CustomFields EntitySet.
        /// </summary>
        public void AddToCustomFields(CustomField customField)
        {
            base.AddObject("CustomFields", customField);
        }

        #endregion
    }

    #endregion
}

namespace SQLBuilderModel
{

    /// <summary>
    /// projetos de conversÃ£o
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SQLBuilderModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Project CreateProject(int id, string name)
        {
            Project project = new Project();
            project.Id = id;
            project.Name = name;
            return project;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// tipo da database destino
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DestinyDbType
        {
            get
            {
                string value = _DestinyDbType;
                OnGetDestinyDbType(ref value);
                return value;
            }
            set
            {
                if (_DestinyDbType != value)
                {
                  OnDestinyDbTypeChanging(ref value);
                  ReportPropertyChanging("DestinyDbType");
                  _DestinyDbType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DestinyDbType");
                  OnDestinyDbTypeChanged();
              }
            }
        }
        private string _DestinyDbType;
        partial void OnGetDestinyDbType(ref string value);
        partial void OnDestinyDbTypeChanging(ref string value);
        partial void OnDestinyDbTypeChanged();
    
        /// <summary>
        /// There are no comments for OriginHost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OriginHost
        {
            get
            {
                string value = _OriginHost;
                OnGetOriginHost(ref value);
                return value;
            }
            set
            {
                if (_OriginHost != value)
                {
                  OnOriginHostChanging(ref value);
                  ReportPropertyChanging("OriginHost");
                  _OriginHost = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OriginHost");
                  OnOriginHostChanged();
              }
            }
        }
        private string _OriginHost;
        partial void OnGetOriginHost(ref string value);
        partial void OnOriginHostChanging(ref string value);
        partial void OnOriginHostChanged();
    
        /// <summary>
        /// There are no comments for OriginPort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OriginPort
        {
            get
            {
                string value = _OriginPort;
                OnGetOriginPort(ref value);
                return value;
            }
            set
            {
                if (_OriginPort != value)
                {
                  OnOriginPortChanging(ref value);
                  ReportPropertyChanging("OriginPort");
                  _OriginPort = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OriginPort");
                  OnOriginPortChanged();
              }
            }
        }
        private string _OriginPort;
        partial void OnGetOriginPort(ref string value);
        partial void OnOriginPortChanging(ref string value);
        partial void OnOriginPortChanged();
    
        /// <summary>
        /// There are no comments for OriginDb in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OriginDb
        {
            get
            {
                string value = _OriginDb;
                OnGetOriginDb(ref value);
                return value;
            }
            set
            {
                if (_OriginDb != value)
                {
                  OnOriginDbChanging(ref value);
                  ReportPropertyChanging("OriginDb");
                  _OriginDb = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OriginDb");
                  OnOriginDbChanged();
              }
            }
        }
        private string _OriginDb;
        partial void OnGetOriginDb(ref string value);
        partial void OnOriginDbChanging(ref string value);
        partial void OnOriginDbChanged();
    
        /// <summary>
        /// There are no comments for OriginSchema in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OriginSchema
        {
            get
            {
                string value = _OriginSchema;
                OnGetOriginSchema(ref value);
                return value;
            }
            set
            {
                if (_OriginSchema != value)
                {
                  OnOriginSchemaChanging(ref value);
                  ReportPropertyChanging("OriginSchema");
                  _OriginSchema = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OriginSchema");
                  OnOriginSchemaChanged();
              }
            }
        }
        private string _OriginSchema;
        partial void OnGetOriginSchema(ref string value);
        partial void OnOriginSchemaChanging(ref string value);
        partial void OnOriginSchemaChanged();
    
        /// <summary>
        /// There are no comments for OriginUser in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OriginUser
        {
            get
            {
                string value = _OriginUser;
                OnGetOriginUser(ref value);
                return value;
            }
            set
            {
                if (_OriginUser != value)
                {
                  OnOriginUserChanging(ref value);
                  ReportPropertyChanging("OriginUser");
                  _OriginUser = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OriginUser");
                  OnOriginUserChanged();
              }
            }
        }
        private string _OriginUser;
        partial void OnGetOriginUser(ref string value);
        partial void OnOriginUserChanging(ref string value);
        partial void OnOriginUserChanged();
    
        /// <summary>
        /// There are no comments for DestinyHost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DestinyHost
        {
            get
            {
                string value = _DestinyHost;
                OnGetDestinyHost(ref value);
                return value;
            }
            set
            {
                if (_DestinyHost != value)
                {
                  OnDestinyHostChanging(ref value);
                  ReportPropertyChanging("DestinyHost");
                  _DestinyHost = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DestinyHost");
                  OnDestinyHostChanged();
              }
            }
        }
        private string _DestinyHost;
        partial void OnGetDestinyHost(ref string value);
        partial void OnDestinyHostChanging(ref string value);
        partial void OnDestinyHostChanged();
    
        /// <summary>
        /// There are no comments for DestinyPort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DestinyPort
        {
            get
            {
                string value = _DestinyPort;
                OnGetDestinyPort(ref value);
                return value;
            }
            set
            {
                if (_DestinyPort != value)
                {
                  OnDestinyPortChanging(ref value);
                  ReportPropertyChanging("DestinyPort");
                  _DestinyPort = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DestinyPort");
                  OnDestinyPortChanged();
              }
            }
        }
        private string _DestinyPort;
        partial void OnGetDestinyPort(ref string value);
        partial void OnDestinyPortChanging(ref string value);
        partial void OnDestinyPortChanged();
    
        /// <summary>
        /// There are no comments for DestinyDb in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DestinyDb
        {
            get
            {
                string value = _DestinyDb;
                OnGetDestinyDb(ref value);
                return value;
            }
            set
            {
                if (_DestinyDb != value)
                {
                  OnDestinyDbChanging(ref value);
                  ReportPropertyChanging("DestinyDb");
                  _DestinyDb = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DestinyDb");
                  OnDestinyDbChanged();
              }
            }
        }
        private string _DestinyDb;
        partial void OnGetDestinyDb(ref string value);
        partial void OnDestinyDbChanging(ref string value);
        partial void OnDestinyDbChanged();
    
        /// <summary>
        /// There are no comments for DestinySchema in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DestinySchema
        {
            get
            {
                string value = _DestinySchema;
                OnGetDestinySchema(ref value);
                return value;
            }
            set
            {
                if (_DestinySchema != value)
                {
                  OnDestinySchemaChanging(ref value);
                  ReportPropertyChanging("DestinySchema");
                  _DestinySchema = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DestinySchema");
                  OnDestinySchemaChanged();
              }
            }
        }
        private string _DestinySchema;
        partial void OnGetDestinySchema(ref string value);
        partial void OnDestinySchemaChanging(ref string value);
        partial void OnDestinySchemaChanged();
    
        /// <summary>
        /// There are no comments for DestinyUser in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DestinyUser
        {
            get
            {
                string value = _DestinyUser;
                OnGetDestinyUser(ref value);
                return value;
            }
            set
            {
                if (_DestinyUser != value)
                {
                  OnDestinyUserChanging(ref value);
                  ReportPropertyChanging("DestinyUser");
                  _DestinyUser = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DestinyUser");
                  OnDestinyUserChanged();
              }
            }
        }
        private string _DestinyUser;
        partial void OnGetDestinyUser(ref string value);
        partial void OnDestinyUserChanging(ref string value);
        partial void OnDestinyUserChanged();
    
        /// <summary>
        /// There are no comments for OriginDbType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OriginDbType
        {
            get
            {
                string value = _OriginDbType;
                OnGetOriginDbType(ref value);
                return value;
            }
            set
            {
                if (_OriginDbType != value)
                {
                  OnOriginDbTypeChanging(ref value);
                  ReportPropertyChanging("OriginDbType");
                  _OriginDbType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OriginDbType");
                  OnOriginDbTypeChanged();
              }
            }
        }
        private string _OriginDbType;
        partial void OnGetOriginDbType(ref string value);
        partial void OnOriginDbTypeChanging(ref string value);
        partial void OnOriginDbTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InsertTables in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLBuilderModel", "insert_table_project_id_fk", "InsertTables")]
        public EntityCollection<InsertTable> InsertTables
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<InsertTable>("SQLBuilderModel.insert_table_project_id_fk", "InsertTables");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<InsertTable>("SQLBuilderModel.insert_table_project_id_fk", "InsertTables", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// Guarda as tabelas que terÃ£o dados inseridos, por projeto, com ordem.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SQLBuilderModel", Name="InsertTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsertTable : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new InsertTable object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="fkProject">Initial value of FkProject.</param>
        /// <param name="table">Initial value of Table.</param>
        /// <param name="order">Initial value of Order.</param>
        public static InsertTable CreateInsertTable(int id, int fkProject, string table, int order)
        {
            InsertTable insertTable = new InsertTable();
            insertTable.Id = id;
            insertTable.FkProject = fkProject;
            insertTable.Table = table;
            insertTable.Order = order;
            return insertTable;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// para seguranÃ§a
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// id do projeto
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int FkProject
        {
            get
            {
                int value = _FkProject;
                OnGetFkProject(ref value);
                return value;
            }
            set
            {
                if (_FkProject != value)
                {
                  OnFkProjectChanging(ref value);
                  ReportPropertyChanging("FkProject");
                  _FkProject = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FkProject");
                  OnFkProjectChanged();
              }
            }
        }
        private int _FkProject;
        partial void OnGetFkProject(ref int value);
        partial void OnFkProjectChanging(ref int value);
        partial void OnFkProjectChanged();
    
        /// <summary>
        /// tabela que terÃ¡ dados inseridos em
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Table
        {
            get
            {
                string value = _Table;
                OnGetTable(ref value);
                return value;
            }
            set
            {
                if (_Table != value)
                {
                  OnTableChanging(ref value);
                  ReportPropertyChanging("Table");
                  _Table = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Table");
                  OnTableChanged();
              }
            }
        }
        private string _Table;
        partial void OnGetTable(ref string value);
        partial void OnTableChanging(ref string value);
        partial void OnTableChanged();
    
        /// <summary>
        /// Ordem da geraÃ§Ã£o de script
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Order
        {
            get
            {
                int value = _Order;
                OnGetOrder(ref value);
                return value;
            }
            set
            {
                if (_Order != value)
                {
                  OnOrderChanging(ref value);
                  ReportPropertyChanging("Order");
                  _Order = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Order");
                  OnOrderChanged();
              }
            }
        }
        private int _Order;
        partial void OnGetOrder(ref int value);
        partial void OnOrderChanging(ref int value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// There are no comments for InsertComand in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string InsertComand
        {
            get
            {
                string value = _InsertComand;
                OnGetInsertComand(ref value);
                return value;
            }
            set
            {
                if (_InsertComand != value)
                {
                  OnInsertComandChanging(ref value);
                  ReportPropertyChanging("InsertComand");
                  _InsertComand = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("InsertComand");
                  OnInsertComandChanged();
              }
            }
        }
        private string _InsertComand;
        partial void OnGetInsertComand(ref string value);
        partial void OnInsertComandChanging(ref string value);
        partial void OnInsertComandChanged();
    
        /// <summary>
        /// There are no comments for FromComand in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string FromComand
        {
            get
            {
                string value = _FromComand;
                OnGetFromComand(ref value);
                return value;
            }
            set
            {
                if (_FromComand != value)
                {
                  OnFromComandChanging(ref value);
                  ReportPropertyChanging("FromComand");
                  _FromComand = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FromComand");
                  OnFromComandChanged();
              }
            }
        }
        private string _FromComand;
        partial void OnGetFromComand(ref string value);
        partial void OnFromComandChanging(ref string value);
        partial void OnFromComandChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Project in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLBuilderModel", "insert_table_project_id_fk", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("SQLBuilderModel.insert_table_project_id_fk", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("SQLBuilderModel.insert_table_project_id_fk", "Project").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Project in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("SQLBuilderModel.insert_table_project_id_fk", "Project");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Project>("SQLBuilderModel.insert_table_project_id_fk", "Project", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Project>("SQLBuilderModel.insert_table_project_id_fk", "Project").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for SelectFields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLBuilderModel", "selectfield_insert_table_fk", "SelectFields")]
        public EntityCollection<SelectField> SelectFields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<SelectField>("SQLBuilderModel.selectfield_insert_table_fk", "SelectFields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<SelectField>("SQLBuilderModel.selectfield_insert_table_fk", "SelectFields", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for CustomFields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLBuilderModel", "custom_field_insert_table_fk", "CustomFields")]
        public EntityCollection<CustomField> CustomFields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<CustomField>("SQLBuilderModel.custom_field_insert_table_fk", "CustomFields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<CustomField>("SQLBuilderModel.custom_field_insert_table_fk", "CustomFields", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// contains all select commands for each field in a certain table conversion
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SQLBuilderModel", Name="SelectField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SelectField : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new SelectField object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="fkInsertTable">Initial value of FkInsertTable.</param>
        /// <param name="selectedField">Initial value of SelectedField.</param>
        /// <param name="column">Initial value of Column.</param>
        public static SelectField CreateSelectField(int id, int fkInsertTable, string selectedField, string column)
        {
            SelectField selectField = new SelectField();
            selectField.Id = id;
            selectField.FkInsertTable = fkInsertTable;
            selectField.SelectedField = selectedField;
            selectField.Column = column;
            return selectField;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for FkInsertTable in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int FkInsertTable
        {
            get
            {
                int value = _FkInsertTable;
                OnGetFkInsertTable(ref value);
                return value;
            }
            set
            {
                if (_FkInsertTable != value)
                {
                  OnFkInsertTableChanging(ref value);
                  ReportPropertyChanging("FkInsertTable");
                  _FkInsertTable = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FkInsertTable");
                  OnFkInsertTableChanged();
              }
            }
        }
        private int _FkInsertTable;
        partial void OnGetFkInsertTable(ref int value);
        partial void OnFkInsertTableChanging(ref int value);
        partial void OnFkInsertTableChanged();
    
        /// <summary>
        /// There are no comments for SelectedField in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string SelectedField
        {
            get
            {
                string value = _SelectedField;
                OnGetSelectedField(ref value);
                return value;
            }
            set
            {
                if (_SelectedField != value)
                {
                  OnSelectedFieldChanging(ref value);
                  ReportPropertyChanging("SelectedField");
                  _SelectedField = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SelectedField");
                  OnSelectedFieldChanged();
              }
            }
        }
        private string _SelectedField;
        partial void OnGetSelectedField(ref string value);
        partial void OnSelectedFieldChanging(ref string value);
        partial void OnSelectedFieldChanged();
    
        /// <summary>
        /// There are no comments for Column in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Column
        {
            get
            {
                string value = _Column;
                OnGetColumn(ref value);
                return value;
            }
            set
            {
                if (_Column != value)
                {
                  OnColumnChanging(ref value);
                  ReportPropertyChanging("Column");
                  _Column = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Column");
                  OnColumnChanged();
              }
            }
        }
        private string _Column;
        partial void OnGetColumn(ref string value);
        partial void OnColumnChanging(ref string value);
        partial void OnColumnChanged();
    
        /// <summary>
        /// There are no comments for DefaultValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DefaultValue
        {
            get
            {
                string value = _DefaultValue;
                OnGetDefaultValue(ref value);
                return value;
            }
            set
            {
                if (_DefaultValue != value)
                {
                  OnDefaultValueChanging(ref value);
                  ReportPropertyChanging("DefaultValue");
                  _DefaultValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DefaultValue");
                  OnDefaultValueChanged();
              }
            }
        }
        private string _DefaultValue;
        partial void OnGetDefaultValue(ref string value);
        partial void OnDefaultValueChanging(ref string value);
        partial void OnDefaultValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InsertTable in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLBuilderModel", "selectfield_insert_table_fk", "InsertTable")]
        public InsertTable InsertTable
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.selectfield_insert_table_fk", "InsertTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.selectfield_insert_table_fk", "InsertTable").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InsertTable in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsertTable> InsertTableReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.selectfield_insert_table_fk", "InsertTable");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InsertTable>("SQLBuilderModel.selectfield_insert_table_fk", "InsertTable", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.selectfield_insert_table_fk", "InsertTable").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SQLBuilderModel.CustomField in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SQLBuilderModel", Name="CustomField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomField : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new CustomField object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="fkInsertTable">Initial value of FkInsertTable.</param>
        /// <param name="column">Initial value of Column.</param>
        /// <param name="columntype">Initial value of Columntype.</param>
        public static CustomField CreateCustomField(int id, int fkInsertTable, string column, string columntype)
        {
            CustomField customField = new CustomField();
            customField.Id = id;
            customField.FkInsertTable = fkInsertTable;
            customField.Column = column;
            customField.Columntype = columntype;
            return customField;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for FkInsertTable in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int FkInsertTable
        {
            get
            {
                int value = _FkInsertTable;
                OnGetFkInsertTable(ref value);
                return value;
            }
            set
            {
                if (_FkInsertTable != value)
                {
                  OnFkInsertTableChanging(ref value);
                  ReportPropertyChanging("FkInsertTable");
                  _FkInsertTable = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FkInsertTable");
                  OnFkInsertTableChanged();
              }
            }
        }
        private int _FkInsertTable;
        partial void OnGetFkInsertTable(ref int value);
        partial void OnFkInsertTableChanging(ref int value);
        partial void OnFkInsertTableChanged();
    
        /// <summary>
        /// There are no comments for Column in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Column
        {
            get
            {
                string value = _Column;
                OnGetColumn(ref value);
                return value;
            }
            set
            {
                if (_Column != value)
                {
                  OnColumnChanging(ref value);
                  ReportPropertyChanging("Column");
                  _Column = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Column");
                  OnColumnChanged();
              }
            }
        }
        private string _Column;
        partial void OnGetColumn(ref string value);
        partial void OnColumnChanging(ref string value);
        partial void OnColumnChanged();
    
        /// <summary>
        /// There are no comments for DefaultValue in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DefaultValue
        {
            get
            {
                string value = _DefaultValue;
                OnGetDefaultValue(ref value);
                return value;
            }
            set
            {
                if (_DefaultValue != value)
                {
                  OnDefaultValueChanging(ref value);
                  ReportPropertyChanging("DefaultValue");
                  _DefaultValue = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DefaultValue");
                  OnDefaultValueChanged();
              }
            }
        }
        private string _DefaultValue;
        partial void OnGetDefaultValue(ref string value);
        partial void OnDefaultValueChanging(ref string value);
        partial void OnDefaultValueChanged();
    
        /// <summary>
        /// There are no comments for Columntype in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Columntype
        {
            get
            {
                string value = _Columntype;
                OnGetColumntype(ref value);
                return value;
            }
            set
            {
                if (_Columntype != value)
                {
                  OnColumntypeChanging(ref value);
                  ReportPropertyChanging("Columntype");
                  _Columntype = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Columntype");
                  OnColumntypeChanged();
              }
            }
        }
        private string _Columntype;
        partial void OnGetColumntype(ref string value);
        partial void OnColumntypeChanging(ref string value);
        partial void OnColumntypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for InsertTable in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SQLBuilderModel", "custom_field_insert_table_fk", "InsertTable")]
        public InsertTable InsertTable
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.custom_field_insert_table_fk", "InsertTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.custom_field_insert_table_fk", "InsertTable").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for InsertTable in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsertTable> InsertTableReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.custom_field_insert_table_fk", "InsertTable");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<InsertTable>("SQLBuilderModel.custom_field_insert_table_fk", "InsertTable", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<InsertTable>("SQLBuilderModel.custom_field_insert_table_fk", "InsertTable").Value = null;
                }
            }
        }

        #endregion
    }

}
